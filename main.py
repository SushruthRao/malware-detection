# Note this code was made for Google Collab.
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier, AdaBoostClassifier, ExtraTreesClassifier
from sklearn.neighbors import KNeighborsClassifier
from sklearn.linear_model import SGDClassifier
from sklearn.naive_bayes import GaussianNB
import pandas as pd


# Assuming the file is named 'uci_malware_detection.csv'
data = pd.read_csv('uci_malware_detection.csv')
# Display the first few rows
data.head()


sns.countplot(x='Label', data=data)
plt.title('Countplot of Label')
plt.xlabel('Label')
plt.ylabel('Count')
plt.show()

X = data.drop(["Label"],axis=1)
y = data['Label'].values

X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.2, random_state=10)

# Define the list of models
models = [RandomForestClassifier, DecisionTreeClassifier, KNeighborsClassifier, AdaBoostClassifier, SGDClassifier, ExtraTreesClassifier, GaussianNB]

accuracy_test = []
model = []

# Loop through the models
for m in models:
    model_name = type(m()).__name__
    print('----------Model => {}'.format(type(m()).__name__))
    model_ = m()
    model_.fit(X_train, y_train)
    pred = model_.predict(X_test)
    acc = accuracy_score(pred, y_test)
    accuracy_test.append(acc)
    model.append(model_name)
    print('Test Accuracy: {:.5f}%'.format(acc * 100))
    print('Classification Report:')
    print(classification_report(y_test, pred))
    print('Confusion Matrix:')
    cf_matrix = confusion_matrix(y_test, pred)
    sns.heatmap(cf_matrix/np.sum(cf_matrix), annot=True, fmt='0.2%')
    plt.show()
    print('-----------------End-----------------')
    print(' ')

model = pd.Series(model, name='Model').astype(str)
accuracy = pd.Series(accuracy_test, name='Accuracy')
output = pd.concat([model, accuracy], axis=1)

output
